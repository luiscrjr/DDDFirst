// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Projeto.Infra.Data.Context;

namespace Projeto.Infra.Data.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20191107004103_AulaDDD")]
    partial class AulaDDD
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Projeto.Domain.AggregatesModel.FornecedorAggregate.Contato", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email");

                    b.Property<int>("IdFornecedor");

                    b.Property<string>("Telefone");

                    b.HasKey("Id");

                    b.HasIndex("IdFornecedor");

                    b.ToTable("Contato");
                });

            modelBuilder.Entity("Projeto.Domain.AggregatesModel.FornecedorAggregate.Endereco", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Bairro");

                    b.Property<string>("Cep");

                    b.Property<string>("Cidade");

                    b.Property<string>("Estado");

                    b.Property<int>("IdFornecedor");

                    b.Property<string>("Logradouro");

                    b.Property<string>("Numero");

                    b.HasKey("Id");

                    b.HasIndex("IdFornecedor");

                    b.ToTable("Endereco");
                });

            modelBuilder.Entity("Projeto.Domain.AggregatesModel.FornecedorAggregate.Fornecedor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Cnpj");

                    b.Property<string>("Nome");

                    b.Property<string>("RazaoSocial");

                    b.HasKey("Id");

                    b.ToTable("Fornecedor");
                });

            modelBuilder.Entity("Projeto.Domain.AggregatesModel.ProdutoAggregate.Categoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdProduto");

                    b.Property<string>("Nome");

                    b.HasKey("Id");

                    b.HasIndex("IdProduto")
                        .IsUnique();

                    b.ToTable("Categoria");
                });

            modelBuilder.Entity("Projeto.Domain.AggregatesModel.ProdutoAggregate.Marca", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdProduto");

                    b.Property<string>("Nome");

                    b.HasKey("Id");

                    b.HasIndex("IdProduto")
                        .IsUnique();

                    b.ToTable("Marca");
                });

            modelBuilder.Entity("Projeto.Domain.AggregatesModel.ProdutoAggregate.Produto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("FornecedorId");

                    b.Property<int>("IdFornecedor");

                    b.Property<string>("Nome");

                    b.Property<decimal>("Preco");

                    b.Property<int>("Quantidade");

                    b.HasKey("Id");

                    b.HasIndex("FornecedorId");

                    b.ToTable("Produto");
                });

            modelBuilder.Entity("Projeto.Domain.AggregatesModel.FornecedorAggregate.Contato", b =>
                {
                    b.HasOne("Projeto.Domain.AggregatesModel.FornecedorAggregate.Fornecedor", "Fornecedor")
                        .WithMany("Contatos")
                        .HasForeignKey("IdFornecedor")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Projeto.Domain.AggregatesModel.FornecedorAggregate.Endereco", b =>
                {
                    b.HasOne("Projeto.Domain.AggregatesModel.FornecedorAggregate.Fornecedor", "Fornecedor")
                        .WithMany("Enderecos")
                        .HasForeignKey("IdFornecedor")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Projeto.Domain.AggregatesModel.ProdutoAggregate.Categoria", b =>
                {
                    b.HasOne("Projeto.Domain.AggregatesModel.ProdutoAggregate.Produto", "Produto")
                        .WithOne("Categoria")
                        .HasForeignKey("Projeto.Domain.AggregatesModel.ProdutoAggregate.Categoria", "IdProduto")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Projeto.Domain.AggregatesModel.ProdutoAggregate.Marca", b =>
                {
                    b.HasOne("Projeto.Domain.AggregatesModel.ProdutoAggregate.Produto", "Produto")
                        .WithOne("Marca")
                        .HasForeignKey("Projeto.Domain.AggregatesModel.ProdutoAggregate.Marca", "IdProduto")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Projeto.Domain.AggregatesModel.ProdutoAggregate.Produto", b =>
                {
                    b.HasOne("Projeto.Domain.AggregatesModel.FornecedorAggregate.Fornecedor", "Fornecedor")
                        .WithMany("Produtos")
                        .HasForeignKey("FornecedorId");
                });
#pragma warning restore 612, 618
        }
    }
}
